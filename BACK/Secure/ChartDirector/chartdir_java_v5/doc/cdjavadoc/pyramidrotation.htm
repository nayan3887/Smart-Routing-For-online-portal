<HTML>
<HEAD>
<Title>Pyramid Rotation</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Pyramid Rotation</p>
<hr class="separator">
<div class="content">
<img src="images/pyramidrotation0.png">&nbsp;&nbsp;<img src="images/pyramidrotation1.png">&nbsp;&nbsp;<img src="images/pyramidrotation2.png">&nbsp;&nbsp;<img src="images/pyramidrotation3.png">&nbsp;&nbsp;<img src="images/pyramidrotation4.png">&nbsp;&nbsp;<img src="images/pyramidrotation5.png">&nbsp;&nbsp;<img src="images/pyramidrotation6.png">
<br><br>
This example demonstrates viewing the pyramid at different rotation angles, configured with <a href="PyramidChart.setViewAngle.htm">PyramidChart.setViewAngle</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/pyramidrotation.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%@page import="javax.servlet.http.*" %&gt;
&lt;%!
// A simple structure to represent a chart image with an image map
private static class ImageWithHotSpot
{
    String imageURL;
    String imageMap;
}

// Function to create the demo charts
ImageWithHotSpot createChart(HttpServletRequest request, int index)
{
    // The data for the pyramid chart
    double[] data = {156, 123, 211, 179};

    // The semi-transparent colors for the pyramid layers
    int[] colors = {0x400000cc, 0x4066aaee, 0x40ffbb00, 0x40ee6622};

    // The rotation angle
    int angle = index * 15;

    // Create a PyramidChart object of size 200 x 200 pixels, with white (ffffff)
    // background and grey (888888) border
    PyramidChart c = new PyramidChart(200, 200, 0xffffff, 0x888888);

    // Set the pyramid center at (100, 100), and width x height to 60 x 120 pixels
    c.setPyramidSize(100, 100, 60, 120);

    // Set the elevation to 15 degrees and use the given rotation angle
    c.addTitle("Rotation = " + angle, "Arial Italic", 15);
    c.setViewAngle(15, angle);

    // Set the pyramid data
    c.setData(data);

    // Set the layer colors to the given colors
    c.setColors2(Chart.DataColor, colors);

    // Leave 1% gaps between layers
    c.setLayerGap(0.01);

    // Output the chart
    ImageWithHotSpot ret = new ImageWithHotSpot();
    ret.imageURL = c.makeSession(request, "chart" + index);
    return ret;
}
%&gt;
&lt;%
ImageWithHotSpot chart0 = createChart(request, 0);
ImageWithHotSpot chart1 = createChart(request, 1);
ImageWithHotSpot chart2 = createChart(request, 2);
ImageWithHotSpot chart3 = createChart(request, 3);
ImageWithHotSpot chart4 = createChart(request, 4);
ImageWithHotSpot chart5 = createChart(request, 5);
ImageWithHotSpot chart6 = createChart(request, 6);
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Pyramid Rotation
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart0.imageURL)%&gt;'&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1.imageURL)%&gt;'&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart2.imageURL)%&gt;'&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart3.imageURL)%&gt;'&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart4.imageURL)%&gt;'&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart5.imageURL)%&gt;'&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart6.imageURL)%&gt;'&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/pyramidrotation.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class pyramidrotation implements DemoModule
{
    //Name of demo program
    public String toString() { return "Pyramid Rotation"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 7; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The data for the pyramid chart
        double[] data = {156, 123, 211, 179};

        // The semi-transparent colors for the pyramid layers
        int[] colors = {0x400000cc, 0x4066aaee, 0x40ffbb00, 0x40ee6622};

        // The rotation angle
        int angle = index * 15;

        // Create a PyramidChart object of size 200 x 200 pixels, with white (ffffff)
        // background and grey (888888) border
        PyramidChart c = new PyramidChart(200, 200, 0xffffff, 0x888888);

        // Set the pyramid center at (100, 100), and width x height to 60 x 120
        // pixels
        c.setPyramidSize(100, 100, 60, 120);

        // Set the elevation to 15 degrees and use the given rotation angle
        c.addTitle("Rotation = " + angle, "Arial Italic", 15);
        c.setViewAngle(15, angle);

        // Set the pyramid data
        c.setData(data);

        // Set the layer colors to the given colors
        c.setColors2(Chart.DataColor, colors);

        // Leave 1% gaps between layers
        c.setLayerGap(0.01);

        // Output the chart
        viewer.setImage(c.makeImage());
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new pyramidrotation();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);
        frame.getContentPane().setLayout(new FlowLayout(FlowLayout.LEFT));
        frame.setSize(800, 450);

        // Create the charts and put them in the content pane
        for (int i = 0; i &lt; demo.getNoOfCharts(); ++i)
        {
            ChartViewer viewer = new ChartViewer();
            demo.createChart(viewer, i);
            frame.getContentPane().add(viewer);
        }

        // Display the window
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

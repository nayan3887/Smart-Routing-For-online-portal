<HTML>
<HEAD>
<Title>Icon Donut Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Icon Donut Chart</p>
<hr class="separator">
<div class="content">
<img src="images/icondonut.png">
<br><br>
This example modifies the <a href="iconpie.htm">Icon Pie Chart</a> example by using a semi-transparent donut instead of a pie, and using metallic background color.<br><br>
<ul><li> <a href="BaseChart.setColors.htm">BaseChart.setColors</a> is used to select the default semi-transparent palette <a href="Chart.transparentPalette.htm">transparentPalette</a>. This palette uses semi-transparent data colors instead of the normal data colors.<br><br>
<li> <a href="Chart.metalColor.htm">Chart.metalColor</a> is used to create metallic colors using light blue and blue as the base colors. The colors are then used as the chart background color by calling <a href="BaseChart.setBackground.htm">BaseChart.setBackground</a>, and as chart title background color by calling <a href="Box.setBackground.htm">Box.setBackground</a> of the title <a href="TextBox.htm">TextBox</a> object.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/icondonut.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// The data for the pie chart
double[] data = {72, 18, 15, 12};

// The depths for the sectors
double[] depths = {30, 20, 10, 10};

// The labels for the pie chart
String[] labels = {"Sunny", "Cloudy", "Rainy", "Snowy"};

// The icons for the sectors
String[] icons = {"sun.png", "cloud.png", "rain.png", "snowy.png"};

// Create a PieChart object of size 400 x 300 pixels
PieChart c = new PieChart(400, 300);

// Use the semi-transparent palette for this chart
c.setColors(Chart.transparentPalette);

// Set the background to metallic light blue (CCFFFF), with a black border and 1
// pixel 3D border effect,
c.setBackground(Chart.metalColor(0xccccff), 0x000000, 1);

//Set search path to current JSP directory for loading icon images
c.setSearchPath(getServletConfig().getServletContext(), request);

// Set donut center at (200, 175), and outer/inner radii as 100/50 pixels
c.setDonutSize(200, 175, 100, 50);

// Add a title box using 15 pts Times Bold Italic font and metallic blue (8888FF)
// background color
c.addTitle("Weather Profile in Wonderland", "Times New Roman Bold Italic", 15
    ).setBackground(Chart.metalColor(0x8888ff));

// Set the pie data and the pie labels
c.setData(data, labels);

// Add icons to the chart as a custom field
c.addExtraField(icons);

// Configure the sector labels using CDML to include the icon images
c.setLabelFormat(
    "&lt;*block,valign=absmiddle*&gt;&lt;*img={field0}*&gt; &lt;*block*&gt;{label}\n{percent}%&lt;*/*&gt;" +
    "&lt;*/*&gt;");

// Draw the pie in 3D with variable 3D depths
c.set3D2(depths);

// Set the start angle to 225 degrees may improve layout when the depths of the
// sector are sorted in descending order, because it ensures the tallest sector is at
// the back.
c.setStartAngle(225);

// Output the chart
String chart1URL = c.makeSession(request, "chart1");

// Include tool tip for the chart
String imageMap1 = c.getHTMLImageMap("", "",
    "title='{label}: {value} days ({percent}%)'");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Icon Donut Chart
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=imageMap1%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/icondonut.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class icondonut implements DemoModule
{
    //Name of demo program
    public String toString() { return "Icon Donut Chart"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The data for the pie chart
        double[] data = {72, 18, 15, 12};

        // The depths for the sectors
        double[] depths = {30, 20, 10, 10};

        // The labels for the pie chart
        String[] labels = {"Sunny", "Cloudy", "Rainy", "Snowy"};

        // The icons for the sectors
        String[] icons = {"sun.png", "cloud.png", "rain.png", "snowy.png"};

        // Create a PieChart object of size 400 x 300 pixels
        PieChart c = new PieChart(400, 300);

        // Use the semi-transparent palette for this chart
        c.setColors(Chart.transparentPalette);

        // Set the background to metallic light blue (CCFFFF), with a black border
        // and 1 pixel 3D border effect,
        c.setBackground(Chart.metalColor(0xccccff), 0x000000, 1);

        // Set donut center at (200, 175), and outer/inner radii as 100/50 pixels
        c.setDonutSize(200, 175, 100, 50);

        // Add a title box using 15 pts Times Bold Italic font and metallic blue
        // (8888FF) background color
        c.addTitle("Weather Profile in Wonderland", "Times New Roman Bold Italic", 15
            ).setBackground(Chart.metalColor(0x8888ff));

        // Set the pie data and the pie labels
        c.setData(data, labels);

        // Add icons to the chart as a custom field
        c.addExtraField(icons);

        // Configure the sector labels using CDML to include the icon images
        c.setLabelFormat(
            "&lt;*block,valign=absmiddle*&gt;&lt;*img={field0}*&gt; &lt;*block*&gt;{label}\n" +
            "{percent}%&lt;*/*&gt;&lt;*/*&gt;");

        // Draw the pie in 3D with variable 3D depths
        c.set3D2(depths);

        // Set the start angle to 225 degrees may improve layout when the depths of
        // the sector are sorted in descending order, because it ensures the tallest
        // sector is at the back.
        c.setStartAngle(225);

        // Output the chart
        viewer.setImage(c.makeImage());

        //include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable", "",
            "title='{label}: {value} days ({percent}%)'"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new icondonut();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

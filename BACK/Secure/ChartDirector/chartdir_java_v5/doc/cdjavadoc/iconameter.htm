<HTML>
<HEAD>
<Title>Icon Angular Meter</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Icon Angular Meter</p>
<hr class="separator">
<div class="content">
<img src="images/iconameter.png">
<br><br>
This example demonstrates a fuel-tank like meters, in which the meter is labelled by an icon and the scale shows text abbreviations.<br><br>
The scale labels on the meter is created by using <a href="BaseMeter.setScale2.htm">BaseMeter.setScale2</a>. The icon is created by adding a custom text box with <a href="BaseChart.addText.htm">BaseChart.addText</a> and using <a href="cdml.htm">CDML</a> to specify an icon.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/iconameter.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// The value to display on the meter
double value = 85;

// Create an AugularMeter object of size 70 x 90 pixels, using black background with
// a 2 pixel 3D depressed border.
AngularMeter m = new AngularMeter(70, 90, 0, 0, -2);

//Set search path to current JSP directory for loading icon images
m.setSearchPath(getServletConfig().getServletContext(), request);

// Use white on black color palette for default text and line colors
m.setColors(Chart.whiteOnBlackPalette);

// Set the meter center at (10, 45), with radius 50 pixels, and span from 135 to 45
// degress
m.setMeter(10, 45, 50, 135, 45);

// Set meter scale from 0 - 100, with the specified labels
m.setScale2(0, 100, new String[]{"E", " ", " ", " ", "F"});

// Set the angular arc and major tick width to 2 pixels
m.setLineWidth(2, 2);

// Add a red zone at 0 - 15
m.addZone(0, 15, 0xff3333);

// Add an icon at (25, 35)
m.addText(25, 35, "&lt;*img=gas.gif*&gt;");

// Add a yellow (ffff00) pointer at the specified value
m.addPointer(value, 0xffff00);

// Output the chart
String chart1URL = m.makeSession(request, "chart1");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Icon Angular Meter
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/iconameter.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class iconameter implements DemoModule
{
    //Name of demo program
    public String toString() { return "Icon Angular Meter"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The value to display on the meter
        double value = 85;

        // Create an AugularMeter object of size 70 x 90 pixels, using black
        // background with a 2 pixel 3D depressed border.
        AngularMeter m = new AngularMeter(70, 90, 0, 0, -2);

        // Use white on black color palette for default text and line colors
        m.setColors(Chart.whiteOnBlackPalette);

        // Set the meter center at (10, 45), with radius 50 pixels, and span from 135
        // to 45 degress
        m.setMeter(10, 45, 50, 135, 45);

        // Set meter scale from 0 - 100, with the specified labels
        m.setScale2(0, 100, new String[]{"E", " ", " ", " ", "F"});

        // Set the angular arc and major tick width to 2 pixels
        m.setLineWidth(2, 2);

        // Add a red zone at 0 - 15
        m.addZone(0, 15, 0xff3333);

        // Add an icon at (25, 35)
        m.addText(25, 35, "&lt;*img=gas.gif*&gt;");

        // Add a yellow (ffff00) pointer at the specified value
        m.addPointer(value, 0xffff00);

        // Output the chart
        viewer.setImage(m.makeImage());
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new iconameter();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

<HTML>
<HEAD>
<Title>Simple Rose Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Simple Rose Chart</p>
<hr class="separator">
<div class="content">
<img src="images/rose.png">
<br><br>
This example demonstrates how to create a rose chart.<br><br>
A rose chart is basically a polar chart with sectors of variable radius. This can be achieved by creating a <a href="PolarChart.htm">PolarChart</a> object as the graph paper, and adding sector zones on it using <a href="AngularAxis.addZone.htm">AngularAxis.addZone</a>.<br><br>
To enable auto-scale of the axis, in this example, we also add the radius data to a transparent line layer using <a href="PolarChart.addLineLayer.htm">PolarChart.addLineLayer</a>. The line layer has no visible effect, but it causes the radial axis to auto-scale so that it covers the radius data.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/rose.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// Data for the chart
double[] data = {9.4, 1.8, 2.1, 2.3, 3.5, 7.7, 8.8, 6.1, 5.0, 3.1, 6.0, 4.3, 5.1,
    2.6, 1.5, 2.2, 5.1, 4.3, 4.0, 9.0, 1.7, 8.8, 9.9, 9.5};
double[] angles = {0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180, 195, 210,
    225, 240, 255, 270, 285, 300, 315, 330, 345};

// Create a PolarChart object of size 460 x 460 pixels, with a silver background and
// a 1 pixel 3D border
PolarChart c = new PolarChart(460, 460, Chart.silverColor(), 0x000000, 1);

// Add a title to the chart at the top left corner using 15pts Arial Bold Italic
// font. Use white text on deep blue background.
c.addTitle("Polar Vector Chart Demonstration", "Arial Bold Italic", 15, 0xffffff
    ).setBackground(0x000080);

// Set plot area center at (230, 240) with radius 180 pixels and white background
c.setPlotArea(230, 240, 180, 0xffffff);

// Set the grid style to circular grid
c.setGridStyle(false);

// Set angular axis as 0 - 360, with a spoke every 30 units
c.angularAxis().setLinearScale(0, 360, 30);

// Add sectors to the chart as sector zones
for (int i = 0; i &lt; data.length; ++i) {
    c.angularAxis().addZone(angles[i], angles[i] + 15, 0, data[i], 0x33ff33, 0x008000
        );
}

// Add an Transparent invisible layer to ensure the axis is auto-scaled using the
// data
c.addLineLayer(data, Chart.Transparent);

// Output the chart
String chart1URL = c.makeSession(request, "chart1");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Simple Rose Chart
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/rose.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class rose implements DemoModule
{
    //Name of demo program
    public String toString() { return "Simple Rose Chart"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // Data for the chart
        double[] data = {9.4, 1.8, 2.1, 2.3, 3.5, 7.7, 8.8, 6.1, 5.0, 3.1, 6.0, 4.3,
            5.1, 2.6, 1.5, 2.2, 5.1, 4.3, 4.0, 9.0, 1.7, 8.8, 9.9, 9.5};
        double[] angles = {0, 15, 30, 45, 60, 75, 90, 105, 120, 135, 150, 165, 180,
            195, 210, 225, 240, 255, 270, 285, 300, 315, 330, 345};

        // Create a PolarChart object of size 460 x 460 pixels, with a silver
        // background and a 1 pixel 3D border
        PolarChart c = new PolarChart(460, 460, Chart.silverColor(), 0x000000, 1);

        // Add a title to the chart at the top left corner using 15pts Arial Bold
        // Italic font. Use white text on deep blue background.
        c.addTitle("Polar Vector Chart Demonstration", "Arial Bold Italic", 15,
            0xffffff).setBackground(0x000080);

        // Set plot area center at (230, 240) with radius 180 pixels and white
        // background
        c.setPlotArea(230, 240, 180, 0xffffff);

        // Set the grid style to circular grid
        c.setGridStyle(false);

        // Set angular axis as 0 - 360, with a spoke every 30 units
        c.angularAxis().setLinearScale(0, 360, 30);

        // Add sectors to the chart as sector zones
        for (int i = 0; i &lt; data.length; ++i) {
            c.angularAxis().addZone(angles[i], angles[i] + 15, 0, data[i], 0x33ff33,
                0x008000);
        }

        // Add an Transparent invisible layer to ensure the axis is auto-scaled using
        // the data
        c.addLineLayer(data, Chart.Transparent);

        // Output the chart
        viewer.setImage(c.makeImage());
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new rose();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

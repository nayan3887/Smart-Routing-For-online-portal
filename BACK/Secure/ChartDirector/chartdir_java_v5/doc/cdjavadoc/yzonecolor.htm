<HTML>
<HEAD>
<Title>Y Zone Coloring</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Y Zone Coloring</p>
<hr class="separator">
<div class="content">
<img src="images/yzonecolor.png">
<br><br>
This example demonstrates using y zone colors - colors that change at certain y value thresholds.<br><br>
In this example, a y zone color is used as the fill color of an area layer, so that the area fill color changes above a certain threshold.<br><br>
Y zone colors are created using <a href="Layer.yZoneColor.htm">Layer.yZoneColor</a>. You can use a y zone color in any ChartDirector API that expects a color. For instance, you can use a y zone color as background color, fill color of data sets, line color, etc.<br><br>
A single y zone color can support one threshold value and change between two colors. The two colors can be any colors, including another y zone color. You may create y zone colors with multiple thresholds by cascading multiple y zone colors this way.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/yzonecolor.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// The data for the chart
double[] data = {30, 28, 40, 55, 75, 68, 54, 60, 50, 62, 75, 65, 75, 89, 60, 55, 53,
    35, 50, 66, 56, 48, 52, 65, 62};

// The labels for the chart
String[] labels = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11",
    "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24"};

// Create a XYChart object of size 500 x 300 pixels, with a pale yellow (0xffffc0)
// background, a black border, and 1 pixel 3D border effect
XYChart c = new XYChart(500, 300, 0xffffc0, 0x000000, 1);

//Set search path to current JSP directory for loading icon images
c.setSearchPath(getServletConfig().getServletContext(), request);

// Set the plotarea at (55, 50) and of size 420 x 205 pixels, with white background.
// Turn on both horizontal and vertical grid lines with light grey color (0xc0c0c0)
c.setPlotArea(55, 50, 420, 205, 0xffffff).setGridColor(0xc0c0c0, 0xc0c0c0);

// Add a legend box at (55, 25) (top of the chart) with horizontal layout. Use 8 pts
// Arial font. Set the background and border color to Transparent.
LegendBox legendBox = c.addLegend(55, 25, false, "", 8);
legendBox.setBackground(Chart.Transparent);

// Add keys to the legend box to explain the color zones
legendBox.addKey("Normal Zone", 0x8033ff33);
legendBox.addKey("Alert Zone", 0x80ff3333);

// Add a title box to the chart using 13 pts Arial Bold Italic font. The title is in
// CDML and includes embedded images for highlight. The text is white (0xffffff) on a
// black background, with a 1 pixel 3D border.
c.addTitle(
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=star.png*&gt;&lt;*img=star.png*&gt; Y Zone Color Demo " +
    "&lt;*img=star.png*&gt;&lt;*img=star.png*&gt;&lt;*/*&gt;", "Arial Bold Italic", 13, 0xffffff
    ).setBackground(0x000000, -1, 1);

// Add a title to the y axis
c.yAxis().setTitle("Energy Concentration (KJ per liter)");

// Set the labels on the x axis.
c.xAxis().setLabels(labels);

// Display 1 out of 3 labels on the x-axis.
c.xAxis().setLabelStep(3);

// Add a title to the x axis using CDML
c.xAxis().setTitle(
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=clock.png*&gt;  Elapsed Time (hour)&lt;*/*&gt;");

// Set the axes width to 2 pixels
c.xAxis().setWidth(2);
c.yAxis().setWidth(2);

// Add an area layer to the chart. The area is using a y zone color, where the color
// is semi-transparent green below 60, and semi-transparent red above 60.
c.addAreaLayer(data, c.yZoneColor(60, 0x8033ff33, 0x80ff3333));

// Add a custom CDML text at the bottom right of the plot area as the logo
c.addText(475, 255,
    "&lt;*block,valign=absmiddle*&gt;&lt;*img=small_molecule.png*&gt; &lt;*block*&gt;&lt;*font=Times " +
    "New Roman Bold Italic,size=10,color=804040*&gt;Molecular\nEngineering&lt;*/*&gt;"
    ).setAlignment(Chart.BottomRight);

// Output the chart
String chart1URL = c.makeSession(request, "chart1");

// Include tool tip for the chart
String imageMap1 = c.getHTMLImageMap("", "",
    "title='Hour {xLabel}: {value} KJ/liter'");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Y Zone Coloring
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=imageMap1%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/yzonecolor.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class yzonecolor implements DemoModule
{
    //Name of demo program
    public String toString() { return "Y Zone Coloring"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The data for the chart
        double[] data = {30, 28, 40, 55, 75, 68, 54, 60, 50, 62, 75, 65, 75, 89, 60,
            55, 53, 35, 50, 66, 56, 48, 52, 65, 62};

        // The labels for the chart
        String[] labels = {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
            "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
            "23", "24"};

        // Create a XYChart object of size 500 x 300 pixels, with a pale yellow
        // (0xffffc0) background, a black border, and 1 pixel 3D border effect
        XYChart c = new XYChart(500, 300, 0xffffc0, 0x000000, 1);

        // Set the plotarea at (55, 50) and of size 420 x 205 pixels, with white
        // background. Turn on both horizontal and vertical grid lines with light
        // grey color (0xc0c0c0)
        c.setPlotArea(55, 50, 420, 205, 0xffffff).setGridColor(0xc0c0c0, 0xc0c0c0);

        // Add a legend box at (55, 25) (top of the chart) with horizontal layout.
        // Use 8 pts Arial font. Set the background and border color to Transparent.
        LegendBox legendBox = c.addLegend(55, 25, false, "", 8);
        legendBox.setBackground(Chart.Transparent);

        // Add keys to the legend box to explain the color zones
        legendBox.addKey("Normal Zone", 0x8033ff33);
        legendBox.addKey("Alert Zone", 0x80ff3333);

        // Add a title box to the chart using 13 pts Arial Bold Italic font. The
        // title is in CDML and includes embedded images for highlight. The text is
        // white (0xffffff) on a black background, with a 1 pixel 3D border.
        c.addTitle(
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=star.png*&gt;&lt;*img=star.png*&gt; Y Zone " +
            "Color Demo &lt;*img=star.png*&gt;&lt;*img=star.png*&gt;&lt;*/*&gt;", "Arial Bold Italic",
            13, 0xffffff).setBackground(0x000000, -1, 1);

        // Add a title to the y axis
        c.yAxis().setTitle("Energy Concentration (KJ per liter)");

        // Set the labels on the x axis.
        c.xAxis().setLabels(labels);

        // Display 1 out of 3 labels on the x-axis.
        c.xAxis().setLabelStep(3);

        // Add a title to the x axis using CDML
        c.xAxis().setTitle(
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=clock.png*&gt;  Elapsed Time (hour)&lt;*/*&gt;");

        // Set the axes width to 2 pixels
        c.xAxis().setWidth(2);
        c.yAxis().setWidth(2);

        // Add an area layer to the chart. The area is using a y zone color, where
        // the color is semi-transparent green below 60, and semi-transparent red
        // above 60.
        c.addAreaLayer(data, c.yZoneColor(60, 0x8033ff33, 0x80ff3333));

        // Add a custom CDML text at the bottom right of the plot area as the logo
        c.addText(475, 255,
            "&lt;*block,valign=absmiddle*&gt;&lt;*img=small_molecule.png*&gt; &lt;*block*&gt;" +
            "&lt;*font=Times New Roman Bold Italic,size=10,color=804040*&gt;Molecular\n" +
            "Engineering&lt;*/*&gt;").setAlignment(Chart.BottomRight);

        // Output the chart
        viewer.setImage(c.makeImage());

        //include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable", "",
            "title='Hour {xLabel}: {value} KJ/liter'"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new yzonecolor();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

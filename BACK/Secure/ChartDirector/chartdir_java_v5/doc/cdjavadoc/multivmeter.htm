<HTML>
<HEAD>
<Title>Multi-Pointer Vertical Meter</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Multi-Pointer Vertical Meter</p>
<hr class="separator">
<div class="content">
<img src="images/multivmeter.png">
<br><br>
This example demonstrates a vertical linear meter with multiple pointers.<br><br>
ChartDirector supports adding arbitrary number of pointers to a meter using <a href="BaseMeter.addPointer.htm">BaseMeter.addPointer</a>. The shape of each pointer is configurable by using <a href="MeterPointer.setShape.htm">MeterPointer.setShape</a> or <a href="MeterPointer.setShape2.htm">MeterPointer.setShape2</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/multivmeter.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// The values to display on the meter
double value0 = 30.99;
double value1 = 45.35;
double value2 = 77.64;

// Create an LinearMeter object of size 60 x 245 pixels, using silver background with
// a 2 pixel black 3D depressed border.
LinearMeter m = new LinearMeter(60, 245, Chart.silverColor(), 0, -2);

// Set the scale region top-left corner at (25, 30), with size of 20 x 200 pixels.
// The scale labels are located on the left (default - implies vertical meter)
m.setMeter(25, 30, 20, 200);

// Set meter scale from 0 - 100, with a tick every 10 units
m.setScale(0, 100, 10);

// Set 0 - 50 as green (99ff99) zone, 50 - 80 as yellow (ffff66) zone, and 80 - 100
// as red (ffcccc) zone
m.addZone(0, 50, 0x99ff99);
m.addZone(50, 80, 0xffff66);
m.addZone(80, 100, 0xffcccc);

// Add deep red (000080), deep green (008000) and deep blue (800000) pointers to
// reflect the values
m.addPointer(value0, 0x000080);
m.addPointer(value1, 0x008000);
m.addPointer(value2, 0x800000);

// Add a text box label at top-center (30, 5) using Arial Bold/8 pts/deep blue
// (000088), with a light blue (9999ff) background
m.addText(30, 5, "Temp C", "Arial Bold", 8, 0x000088, Chart.TopCenter).setBackground(
    0x9999ff);

// Output the chart
String chart1URL = m.makeSession(request, "chart1");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Multi-Pointer Vertical Meter
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/multivmeter.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class multivmeter implements DemoModule
{
    //Name of demo program
    public String toString() { return "Multi-Pointer Vertical Meter"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The values to display on the meter
        double value0 = 30.99;
        double value1 = 45.35;
        double value2 = 77.64;

        // Create an LinearMeter object of size 60 x 245 pixels, using silver
        // background with a 2 pixel black 3D depressed border.
        LinearMeter m = new LinearMeter(60, 245, Chart.silverColor(), 0, -2);

        // Set the scale region top-left corner at (25, 30), with size of 20 x 200
        // pixels. The scale labels are located on the left (default - implies
        // vertical meter)
        m.setMeter(25, 30, 20, 200);

        // Set meter scale from 0 - 100, with a tick every 10 units
        m.setScale(0, 100, 10);

        // Set 0 - 50 as green (99ff99) zone, 50 - 80 as yellow (ffff66) zone, and 80
        // - 100 as red (ffcccc) zone
        m.addZone(0, 50, 0x99ff99);
        m.addZone(50, 80, 0xffff66);
        m.addZone(80, 100, 0xffcccc);

        // Add deep red (000080), deep green (008000) and deep blue (800000) pointers
        // to reflect the values
        m.addPointer(value0, 0x000080);
        m.addPointer(value1, 0x008000);
        m.addPointer(value2, 0x800000);

        // Add a text box label at top-center (30, 5) using Arial Bold/8 pts/deep
        // blue (000088), with a light blue (9999ff) background
        m.addText(30, 5, "Temp C", "Arial Bold", 8, 0x000088, Chart.TopCenter
            ).setBackground(0x9999ff);

        // Output the chart
        viewer.setImage(m.makeImage());
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new multivmeter();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

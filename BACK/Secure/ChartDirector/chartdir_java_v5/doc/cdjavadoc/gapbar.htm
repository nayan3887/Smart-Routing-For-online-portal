<HTML>
<HEAD>
<Title>Bar Gap</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Bar Gap</p>
<hr class="separator">
<div class="content">
<img src="images/gapbar0.png">&nbsp;&nbsp;<img src="images/gapbar1.png">&nbsp;&nbsp;<img src="images/gapbar2.png">&nbsp;&nbsp;<img src="images/gapbar3.png">&nbsp;&nbsp;<img src="images/gapbar4.png">&nbsp;&nbsp;<img src="images/gapbar5.png">
<br><br>
This example demonstrates the effects of different bar gaps configured using <a href="BarLayer.setBarGap.htm">BarLayer.setBarGap</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/gapbar.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%@page import="javax.servlet.http.*" %&gt;
&lt;%!
// A simple structure to represent a chart image with an image map
private static class ImageWithHotSpot
{
    String imageURL;
    String imageMap;
}

// Function to create the demo charts
ImageWithHotSpot createChart(HttpServletRequest request, int index)
{
    double bargap = index * 0.25 - 0.25;

    // The data for the bar chart
    double[] data = {100, 125, 245, 147, 67};

    // The labels for the bar chart
    String[] labels = {"Mon", "Tue", "Wed", "Thu", "Fri"};

    // Create a XYChart object of size 150 x 150 pixels
    XYChart c = new XYChart(150, 150);

    // Set the plotarea at (27, 20) and of size 120 x 100 pixels
    c.setPlotArea(27, 20, 120, 100);

    // Set the labels on the x axis
    c.xAxis().setLabels(labels);

    if (bargap &gt;= 0) {
        // Add a title to display to bar gap using 8 pts Arial font
        c.addTitle("      Bar Gap = " + bargap, "Arial", 8);
    } else {
        // Use negative value to mean TouchBar
        c.addTitle("      Bar Gap = TouchBar", "Arial", 8);
        bargap = Chart.TouchBar;
    }

    // Add a bar chart layer using the given data and set the bar gap
    c.addBarLayer(data).setBarGap(bargap);

    // Output the chart
    ImageWithHotSpot ret = new ImageWithHotSpot();
    ret.imageURL = c.makeSession(request, "chart" + index);

    // Include tool tip for the chart
    ret.imageMap = c.getHTMLImageMap("", "",
        "title='Production on {xLabel}: {value} kg'");

    return ret;
}
%&gt;
&lt;%
ImageWithHotSpot chart0 = createChart(request, 0);
ImageWithHotSpot chart1 = createChart(request, 1);
ImageWithHotSpot chart2 = createChart(request, 2);
ImageWithHotSpot chart3 = createChart(request, 3);
ImageWithHotSpot chart4 = createChart(request, 4);
ImageWithHotSpot chart5 = createChart(request, 5);
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Bar Gap
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart0.imageURL)%&gt;'
    usemap="#map0" border="0"&gt;
&lt;map name="map0"&gt;&lt;%=chart0.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1.imageURL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=chart1.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart2.imageURL)%&gt;'
    usemap="#map2" border="0"&gt;
&lt;map name="map2"&gt;&lt;%=chart2.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart3.imageURL)%&gt;'
    usemap="#map3" border="0"&gt;
&lt;map name="map3"&gt;&lt;%=chart3.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart4.imageURL)%&gt;'
    usemap="#map4" border="0"&gt;
&lt;map name="map4"&gt;&lt;%=chart4.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart5.imageURL)%&gt;'
    usemap="#map5" border="0"&gt;
&lt;map name="map5"&gt;&lt;%=chart5.imageMap%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/gapbar.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class gapbar implements DemoModule
{
    //Name of demo program
    public String toString() { return "Bar Gap"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 6; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        double bargap = index * 0.25 - 0.25;

        // The data for the bar chart
        double[] data = {100, 125, 245, 147, 67};

        // The labels for the bar chart
        String[] labels = {"Mon", "Tue", "Wed", "Thu", "Fri"};

        // Create a XYChart object of size 150 x 150 pixels
        XYChart c = new XYChart(150, 150);

        // Set the plotarea at (27, 20) and of size 120 x 100 pixels
        c.setPlotArea(27, 20, 120, 100);

        // Set the labels on the x axis
        c.xAxis().setLabels(labels);

        if (bargap &gt;= 0) {
            // Add a title to display to bar gap using 8 pts Arial font
            c.addTitle("      Bar Gap = " + bargap, "Arial", 8);
        } else {
            // Use negative value to mean TouchBar
            c.addTitle("      Bar Gap = TouchBar", "Arial", 8);
            bargap = Chart.TouchBar;
        }

        // Add a bar chart layer using the given data and set the bar gap
        c.addBarLayer(data).setBarGap(bargap);

        // Output the chart
        viewer.setImage(c.makeImage());

        //include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable", "",
            "title='Production on {xLabel}: {value} kg'"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new gapbar();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);
        frame.getContentPane().setLayout(new FlowLayout(FlowLayout.LEFT));
        frame.setSize(800, 450);

        // Create the charts and put them in the content pane
        for (int i = 0; i &lt; demo.getNoOfCharts(); ++i)
        {
            ChartViewer viewer = new ChartViewer();
            demo.createChart(viewer, i);
            frame.getContentPane().add(viewer);
        }

        // Display the window
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

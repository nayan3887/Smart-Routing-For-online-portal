<HTML>
<HEAD>
<Title>Rotated Pyramid Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Rotated Pyramid Chart</p>
<hr class="separator">
<div class="content">
<img src="images/rotatedpyramid.png">
<br><br>
This example demonstrates a semi-transparent pyramid viewed at elevation and rotation angles. It also demonstrates adding a legend box to the pyramid chart.<br><br>
The elevation and rotation angles are set using <a href="PyramidChart.setViewAngle.htm">PyramidChart.setViewAngle</a>. The legend box is added using <a href="BaseChart.addLegend.htm">BaseChart.addLegend</a>. Semi-transparent colors are used to make the pyramid semi-transparent.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/rotatedpyramid.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// The data for the pyramid chart
double[] data = {156, 123, 211, 179};

// The labels for the pyramid chart
String[] labels = {"Funds", "Bonds", "Stocks", "Cash"};

// The semi-transparent colors for the pyramid layers
int[] colors = {0x400000cc, 0x4066aaee, 0x40ffbb00, 0x40ee6622};

// Create a PyramidChart object of size 450 x 400 pixels
PyramidChart c = new PyramidChart(450, 400);

// Set the pyramid center at (220, 180), and width x height to 150 x 300 pixels
c.setPyramidSize(220, 180, 150, 300);

// Set the elevation to 15 degrees and rotation to 75 degrees
c.setViewAngle(15, 75);

// Set the pyramid data and labels
c.setData(data, labels);

// Set the layer colors to the given colors
c.setColors2(Chart.DataColor, colors);

// Leave 1% gaps between layers
c.setLayerGap(0.01);

// Add a legend box at (320, 60), with light grey (eeeeee) background and grey
// (888888) border. Set the top-left and bottom-right corners to rounded corners of
// 10 pixels radius.
LegendBox legendBox = c.addLegend(320, 60);
legendBox.setBackground(0xeeeeee, 0x888888);
legendBox.setRoundedCorners(10, 0, 10, 0);

// Add labels at the center of the pyramid layers using Arial Bold font. The labels
// will show the percentage of the layers.
c.setCenterLabel("{percent}%", "Arial Bold");

// Output the chart
String chart1URL = c.makeSession(request, "chart1");

// Include tool tip for the chart
String imageMap1 = c.getHTMLImageMap("", "",
    "title='{label}: US$ {value}M ({percent}%)'");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Rotated Pyramid Chart
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=imageMap1%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/rotatedpyramid.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class rotatedpyramid implements DemoModule
{
    //Name of demo program
    public String toString() { return "Rotated Pyramid Chart"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The data for the pyramid chart
        double[] data = {156, 123, 211, 179};

        // The labels for the pyramid chart
        String[] labels = {"Funds", "Bonds", "Stocks", "Cash"};

        // The semi-transparent colors for the pyramid layers
        int[] colors = {0x400000cc, 0x4066aaee, 0x40ffbb00, 0x40ee6622};

        // Create a PyramidChart object of size 450 x 400 pixels
        PyramidChart c = new PyramidChart(450, 400);

        // Set the pyramid center at (220, 180), and width x height to 150 x 300
        // pixels
        c.setPyramidSize(220, 180, 150, 300);

        // Set the elevation to 15 degrees and rotation to 75 degrees
        c.setViewAngle(15, 75);

        // Set the pyramid data and labels
        c.setData(data, labels);

        // Set the layer colors to the given colors
        c.setColors2(Chart.DataColor, colors);

        // Leave 1% gaps between layers
        c.setLayerGap(0.01);

        // Add a legend box at (320, 60), with light grey (eeeeee) background and
        // grey (888888) border. Set the top-left and bottom-right corners to rounded
        // corners of 10 pixels radius.
        LegendBox legendBox = c.addLegend(320, 60);
        legendBox.setBackground(0xeeeeee, 0x888888);
        legendBox.setRoundedCorners(10, 0, 10, 0);

        // Add labels at the center of the pyramid layers using Arial Bold font. The
        // labels will show the percentage of the layers.
        c.setCenterLabel("{percent}%", "Arial Bold");

        // Output the chart
        viewer.setImage(c.makeImage());

        //include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable", "",
            "title='{label}: US$ {value}M ({percent}%)'"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new rotatedpyramid();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

<HTML>
<HEAD>
<Title>Gradient Bar Shading</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Gradient Bar Shading</p>
<hr class="separator">
<div class="content">
<img src="images/gradientbar.png">
<br><br>
This example demonstrates using bar gradient shading for a horizontal bar chart. It also demonstrates using gradient color background, partially rounded frame, and automatic resizing of the plot area to fit the chart.<br><br>
<ul><li> The gradient background is achieved by using <a href="BaseChart.linearGradientColor.htm">BaseChart.linearGradientColor</a> to define the gradient color, then use <a href="BaseChart.setBackground.htm">BaseChart.setBackground</a> to set it as the chart background color.<br><br>
<li> The partially rounded frame is configured using <a href="BaseChart.setRoundedFrame.htm">BaseChart.setRoundedFrame</a>. Note that only 2 of the 4 corners are rounded.<br><br>
<li> The x-axis and y-axis are swapped using <a href="XYChart.swapXY.htm">XYChart.swapXY</a>, so the bars become horizontal.<br><br>
<li> The bar gradient effect is defined using <a href="Chart.barLighting.htm">Chart.barLighting</a>, then applied to the bars using <a href="Layer.setBorderColor.htm">Layer.setBorderColor</a>.<br><br>
<li> After the entire chart is configured, the <a href="XYChart.packPlotArea.htm">XYChart.packPlotArea</a> method is used  to adjust the plot area size, so as to fit the plot area and the axes in a given  bounding box.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/gradientbar.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// The data for the bar chart
double[] data = {1350, 1600, 1950, 2300, 2700};

// The labels for the bar chart
String[] labels = {"2001", "2002", "2003", "2004", "2005"};

// The colors for the bars
int[] colors = {0xcc0000, 0x66aaee, 0xeebb22, 0xcccccc, 0xcc88ff};

// Create a PieChart object of size 600 x 380 pixels.
XYChart c = new XYChart(600, 380);

// Use the white on black palette, which means the default text and line colors are
// white
c.setColors(Chart.whiteOnBlackPalette);

// Use a vertical gradient color from blue (0000cc) to deep blue (000044) as
// background. Use rounded corners of 30 pixels radius for the top-left and
// bottom-right corners.
c.setBackground(c.linearGradientColor(0, 0, 0, c.getHeight(), 0x0000cc, 0x000044));
c.setRoundedFrame(0xffffff, 30, 0, 30, 0);

// Add a title using 18 pts Times New Roman Bold Italic font. Add 6 pixels top and
// bottom margins to the title.
TextBox title = c.addTitle("Annual Revenue for Star Tech",
    "Times New Roman Bold Italic", 18);
title.setMargin2(0, 0, 6, 6);

// Add a separator line in white color just under the title
c.addLine(20, title.getHeight(), c.getWidth() - 21, title.getHeight(), 0xffffff);

// Tentatively set the plotarea at (70, 80) and of 480 x 240 pixels in size. Use
// transparent border and white grid lines
c.setPlotArea(70, 80, 480, 240, -1, -1, Chart.Transparent, 0xffffff);

// Swap the axis so that the bars are drawn horizontally
c.swapXY();

// Add a multi-color bar chart layer using the supplied data. Use bar gradient
// lighting with the light intensity from 0.75 to 2.0
c.addBarLayer3(data, colors).setBorderColor(Chart.Transparent, Chart.barLighting(
    0.75, 2.0));

// Set the labels on the x axis.
c.xAxis().setLabels(labels);

// Show the same scale on the left and right y-axes
c.syncYAxis();

// Set the bottom y-axis title using 10pt Arial Bold font
c.yAxis().setTitle("USD (millions)", "Arial Bold", 10);

// Set y-axes to transparent
c.yAxis().setColors(Chart.Transparent);
c.yAxis2().setColors(Chart.Transparent);

// Disable ticks on the x-axis by setting the tick color to transparent
c.xAxis().setTickColor(Chart.Transparent);

// Set the label styles of all axes to 8pt Arial Bold font
c.xAxis().setLabelStyle("Arial Bold", 8);
c.yAxis().setLabelStyle("Arial Bold", 8);
c.yAxis2().setLabelStyle("Arial Bold", 8);

// Adjust the plot area size, such that the bounding box (inclusive of axes) is 30
// pixels from the left edge, 25 pixels below the title, 50 pixels from the right
// edge, and 25 pixels from the bottom edge.
c.packPlotArea(30, title.getHeight() + 25, c.getWidth() - 50, c.getHeight() - 25);

// Output the chart
String chart1URL = c.makeSession(request, "chart1");

// Include tool tip for the chart
String imageMap1 = c.getHTMLImageMap("", "", "title='Year {xLabel}: US$ {value}M'");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Gradient Bar Shading
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=imageMap1%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/gradientbar.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class gradientbar implements DemoModule
{
    //Name of demo program
    public String toString() { return "Gradient Bar Shading"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The data for the bar chart
        double[] data = {1350, 1600, 1950, 2300, 2700};

        // The labels for the bar chart
        String[] labels = {"2001", "2002", "2003", "2004", "2005"};

        // The colors for the bars
        int[] colors = {0xcc0000, 0x66aaee, 0xeebb22, 0xcccccc, 0xcc88ff};

        // Create a PieChart object of size 600 x 380 pixels.
        XYChart c = new XYChart(600, 380);

        // Use the white on black palette, which means the default text and line
        // colors are white
        c.setColors(Chart.whiteOnBlackPalette);

        // Use a vertical gradient color from blue (0000cc) to deep blue (000044) as
        // background. Use rounded corners of 30 pixels radius for the top-left and
        // bottom-right corners.
        c.setBackground(c.linearGradientColor(0, 0, 0, c.getHeight(), 0x0000cc,
            0x000044));
        c.setRoundedFrame(0xffffff, 30, 0, 30, 0);

        // Add a title using 18 pts Times New Roman Bold Italic font. Add 6 pixels
        // top and bottom margins to the title.
        TextBox title = c.addTitle("Annual Revenue for Star Tech",
            "Times New Roman Bold Italic", 18);
        title.setMargin2(0, 0, 6, 6);

        // Add a separator line in white color just under the title
        c.addLine(20, title.getHeight(), c.getWidth() - 21, title.getHeight(),
            0xffffff);

        // Tentatively set the plotarea at (70, 80) and of 480 x 240 pixels in size.
        // Use transparent border and white grid lines
        c.setPlotArea(70, 80, 480, 240, -1, -1, Chart.Transparent, 0xffffff);

        // Swap the axis so that the bars are drawn horizontally
        c.swapXY();

        // Add a multi-color bar chart layer using the supplied data. Use bar
        // gradient lighting with the light intensity from 0.75 to 2.0
        c.addBarLayer3(data, colors).setBorderColor(Chart.Transparent,
            Chart.barLighting(0.75, 2.0));

        // Set the labels on the x axis.
        c.xAxis().setLabels(labels);

        // Show the same scale on the left and right y-axes
        c.syncYAxis();

        // Set the bottom y-axis title using 10pt Arial Bold font
        c.yAxis().setTitle("USD (millions)", "Arial Bold", 10);

        // Set y-axes to transparent
        c.yAxis().setColors(Chart.Transparent);
        c.yAxis2().setColors(Chart.Transparent);

        // Disable ticks on the x-axis by setting the tick color to transparent
        c.xAxis().setTickColor(Chart.Transparent);

        // Set the label styles of all axes to 8pt Arial Bold font
        c.xAxis().setLabelStyle("Arial Bold", 8);
        c.yAxis().setLabelStyle("Arial Bold", 8);
        c.yAxis2().setLabelStyle("Arial Bold", 8);

        // Adjust the plot area size, such that the bounding box (inclusive of axes)
        // is 30 pixels from the left edge, 25 pixels below the title, 50 pixels from
        // the right edge, and 25 pixels from the bottom edge.
        c.packPlotArea(30, title.getHeight() + 25, c.getWidth() - 50, c.getHeight() -
            25);

        // Output the chart
        viewer.setImage(c.makeImage());

        //include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable", "",
            "title='Year {xLabel}: US$ {value}M'"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new gradientbar();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

<HTML>
<HEAD>
<Title>Multi-Pie Chart</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Multi-Pie Chart</p>
<hr class="separator">
<div class="content">
<img src="images/multipie0.png">&nbsp;&nbsp;<img src="images/multipie1.png">&nbsp;&nbsp;<img src="images/multipie2.png">
<br><br>
This example demonstrates drawing multiple pies with different data and colors. It also demonstrates putting labels on the sectors and using sector borders.<br><br>
<ul><li> The sectors colors are specified using <a href="BaseChart.setColors2.htm">BaseChart.setColors2</a>.<br><br>
<li> The sectors all have white borders set using <a href="PieChart.setLineColor.htm">PieChart.setLineColor</a>. The borders around the perimeters are invisible as they are the same color as the background. The sector borders internal to the pies become the separating lines among sectors.<br><br>
<li> The sector labels are configured with a pale yellow background and black border. This is by getting the <a href="TextBox.htm">TextBox</a> object representing the sector label prototype using <a href="PieChart.setLabelStyle.htm">PieChart.setLabelStyle</a>, and then call its <a href="Box.setBackground.htm">Box.setBackground</a> method.<br><br>
<li> The sector labels are moved inside the pie by using <a href="PieChart.setLabelLayout.htm">PieChart.setLabelLayout</a> with a negative label position.</ul>
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/multipie.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%@page import="javax.servlet.http.*" %&gt;
&lt;%!
// A simple structure to represent a chart image with an image map
private static class ImageWithHotSpot
{
    String imageURL;
    String imageMap;
}

// Function to create the demo charts
ImageWithHotSpot createChart(HttpServletRequest request, int index)
{
    // The data for the pie chart
    double[] data0 = {25, 18, 15};
    double[] data1 = {14, 32, 24};
    double[] data2 = {25, 23, 9};

    // The labels for the pie chart
    String[] labels = {"Software", "Hardware", "Services"};

    // Create a PieChart object of size 180 x 160 pixels
    PieChart c = new PieChart(180, 160);

    // Set the center of the pie at (90, 80) and the radius to 60 pixels
    c.setPieSize(90, 80, 60);

    // Set the border color of the sectors to white (ffffff)
    c.setLineColor(0xffffff);

    // Set the background color of the sector label to pale yellow (ffffc0) with a
    // black border (000000)
    c.setLabelStyle().setBackground(0xffffc0, 0x000000);

    // Set the label to be slightly inside the perimeter of the circle
    c.setLabelLayout(Chart.CircleLayout, -10);

    // Set the title, data and colors according to which pie to draw
    if (index == 0) {
        c.addTitle("Alpha Division", "Arial Bold", 8);
        c.setData(data0, labels);
        c.setColors2(Chart.DataColor, new int[]{0xff3333, 0xff9999, 0xffcccc});
    } else if (index == 1) {
        c.addTitle("Beta Division", "Arial Bold", 8);
        c.setData(data1, labels);
        c.setColors2(Chart.DataColor, new int[]{0x33ff33, 0x99ff99, 0xccffcc});
    } else {
        c.addTitle("Gamma Division", "Arial Bold", 8);
        c.setData(data2, labels);
        c.setColors2(Chart.DataColor, new int[]{0x3333ff, 0x9999ff, 0xccccff});
    }

    // Output the chart
    ImageWithHotSpot ret = new ImageWithHotSpot();
    ret.imageURL = c.makeSession(request, "chart" + index);

    // Include tool tip for the chart
    ret.imageMap = c.getHTMLImageMap("", "",
        "title='{label}: US${value}M ({percent}%)'");

    return ret;
}
%&gt;
&lt;%
ImageWithHotSpot chart0 = createChart(request, 0);
ImageWithHotSpot chart1 = createChart(request, 1);
ImageWithHotSpot chart2 = createChart(request, 2);
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Multi-Pie Chart
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart0.imageURL)%&gt;'
    usemap="#map0" border="0"&gt;
&lt;map name="map0"&gt;&lt;%=chart0.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1.imageURL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=chart1.imageMap%&gt;&lt;/map&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart2.imageURL)%&gt;'
    usemap="#map2" border="0"&gt;
&lt;map name="map2"&gt;&lt;%=chart2.imageMap%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/multipie.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class multipie implements DemoModule
{
    //Name of demo program
    public String toString() { return "Multi-Pie Chart"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 3; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The data for the pie chart
        double[] data0 = {25, 18, 15};
        double[] data1 = {14, 32, 24};
        double[] data2 = {25, 23, 9};

        // The labels for the pie chart
        String[] labels = {"Software", "Hardware", "Services"};

        // Create a PieChart object of size 180 x 160 pixels
        PieChart c = new PieChart(180, 160);

        // Set the center of the pie at (90, 80) and the radius to 60 pixels
        c.setPieSize(90, 80, 60);

        // Set the border color of the sectors to white (ffffff)
        c.setLineColor(0xffffff);

        // Set the background color of the sector label to pale yellow (ffffc0) with
        // a black border (000000)
        c.setLabelStyle().setBackground(0xffffc0, 0x000000);

        // Set the label to be slightly inside the perimeter of the circle
        c.setLabelLayout(Chart.CircleLayout, -10);

        // Set the title, data and colors according to which pie to draw
        if (index == 0) {
            c.addTitle("Alpha Division", "Arial Bold", 8);
            c.setData(data0, labels);
            c.setColors2(Chart.DataColor, new int[]{0xff3333, 0xff9999, 0xffcccc});
        } else if (index == 1) {
            c.addTitle("Beta Division", "Arial Bold", 8);
            c.setData(data1, labels);
            c.setColors2(Chart.DataColor, new int[]{0x33ff33, 0x99ff99, 0xccffcc});
        } else {
            c.addTitle("Gamma Division", "Arial Bold", 8);
            c.setData(data2, labels);
            c.setColors2(Chart.DataColor, new int[]{0x3333ff, 0x9999ff, 0xccccff});
        }

        // Output the chart
        viewer.setImage(c.makeImage());

        //include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable", "",
            "title='{label}: US${value}M ({percent}%)'"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new multipie();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);
        frame.getContentPane().setLayout(new FlowLayout(FlowLayout.LEFT));
        frame.setSize(800, 450);

        // Create the charts and put them in the content pane
        for (int i = 0; i &lt; demo.getNoOfCharts(); ++i)
        {
            ChartViewer viewer = new ChartViewer();
            demo.createChart(viewer, i);
            frame.getContentPane().add(viewer);
        }

        // Display the window
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>

<HTML>
<HEAD>
<Title>Confidence Band</Title>
<link type='text/css' rel='Stylesheet' href="maxchartapi.css" />
</HEAD>
<body bgcolor="#FFFFFF" text="#000000" topmargin="0" leftmargin="0" rightmargin="0" marginwidth="0" marginheight="0">

<p class="heading0">ChartDirector Ver 5.0 (Java Edition)</p>
<p class="heading1">Confidence Band</p>
<hr class="separator">
<div class="content">
<img src="images/confidenceband.png">
<br><br>
This example demonstrates adding confidence bands to a trend line. It also demonstrates how to display linear regression parameters on the chart.<br><br>
In linear regression, the data points are assumed to be related by:<br><br>
<div style="margin-left:25;font-family:courier new,courier"> y = m * x + c + err </div><br>
where m and c are constants, and err is a random variable. Linear regression estimates m, c and err based on available data.<br><br>
As m and c are estimated values, the trend line y = m * x + c may be inaccurate. In ChartDirector, the uncertainties can be represented as a confidence band using <a href="TrendLayer.addConfidenceBand.htm">TrendLayer.addConfidenceBand</a>. For example, the 95% confidence band means there are 95% probability that the "real" trend line is in that band.<br><br>
To predict a data point (infer y given x), we use y = m * x + c + err. As m, c and err are estimated values, the predicted data point may be inaccurate. In ChartDirector, the uncertainties can be represented as a prediction band using <a href="TrendLayer.addPredictionBand.htm">TrendLayer.addPredictionBand</a>.<br><br>
Note that the prediction band is always wider than the confidence band because of the extra uncertainties contributed by the err term.<br><br>
In ChartDirector, the linear regression parameters slope, intercept, correlation coefficient and standard error can be obtained by using <a href="TrendLayer.getSlope.htm">TrendLayer.getSlope</a>, <a href="TrendLayer.getIntercept.htm">TrendLayer.getIntercept</a>, <a href="TrendLayer.getCorrelation.htm">TrendLayer.getCorrelation</a> and <a href="TrendLayer.getStdError.htm">TrendLayer.getStdError</a>. (Please refer to appropriate statistics text books for explanation of these values.)<br><br>
In this example, the linear regression parameters are formatted into a table using <a href="cdml.htm">CDML</a>, which is then added to the chart as custom text box using <a href="BaseChart.addText.htm">BaseChart.addText</a>.
</div>
<p class="heading1a">Source Code Listing</p>
<div class="content">
<b>[JSP Version]</b> jspdemo/confidenceband.jsp
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>&lt;%@page import="ChartDirector.*" %&gt;
&lt;%
// The XY data of the first data series
double[] dataX = {50, 55, 37, 24, 42, 49, 63, 72, 83, 59};
double[] dataY = {3.6, 2.8, 2.5, 2.3, 3.8, 3.0, 3.8, 5.0, 6.0, 3.3};

// Create a XYChart object of size 450 x 420 pixels
XYChart c = new XYChart(450, 420);

// Set the plotarea at (55, 65) and of size 350 x 300 pixels, with white background
// and a light grey border (0xc0c0c0). Turn on both horizontal and vertical grid
// lines with light grey color (0xc0c0c0)
c.setPlotArea(55, 65, 350, 300, 0xffffff, -1, 0xc0c0c0, 0xc0c0c0, -1);

// Add a title to the chart using 18 point Times Bold Itatic font.
c.addTitle("Server Performance", "Times New Roman Bold Italic", 18);

// Add titles to the axes using 12 pts Arial Bold Italic font
c.yAxis().setTitle("Response Time (sec)", "Arial Bold Italic", 12);
c.xAxis().setTitle("Server Load (TPS)", "Arial Bold Italic", 12);

// Set the axes line width to 3 pixels
c.yAxis().setWidth(3);
c.xAxis().setWidth(3);

// Add a scatter layer using (dataX, dataY)
ScatterLayer scatterLayer = c.addScatterLayer(dataX, dataY, "", Chart.DiamondSymbol,
    11, 0x008000);

// tool tip for scatter layer
scatterLayer.setHTMLImageMap("", "", "title='Response time at {x} TPS: {value} sec'")
    ;

// Add a trend line layer for (dataX, dataY)
TrendLayer trendLayer = c.addTrendLayer2(dataX, dataY, 0x008000);

// Set the line width to 3 pixels
trendLayer.setLineWidth(3);

// Add a 95% confidence band for the line
trendLayer.addConfidenceBand(0.95, 0x806666ff);

// Add a 95% confidence band (prediction band) for the points
trendLayer.addPredictionBand(0.95, 0x8066ff66);

// tool tip for trend layer
trendLayer.setHTMLImageMap("", "",
    "title='Slope = {slope|4} sec/TPS; Intercept = {intercept|4} sec'");

// Add a legend box at (50, 30) (top of the chart) with horizontal layout. Use 10 pts
// Arial Bold Italic font. Set the background and border color to Transparent.
LegendBox legendBox = c.addLegend(50, 30, false, "Arial Bold Italic", 10);
legendBox.setBackground(Chart.Transparent);

// Add entries to the legend box
legendBox.addKey("95% Line Confidence", 0x806666ff);
legendBox.addKey("95% Point Confidence", 0x8066ff66);

// Display the trend line parameters as a text table formatted using CDML
TextBox textbox = c.addText(56, 65, java.text.MessageFormat.format(
    "&lt;*block*&gt;Slope\nIntercept\nCorrelation\nStd Error&lt;*/*&gt;   &lt;*block*&gt;" +
    "{0,number,#.####} sec/tps\n{1,number,#.####} sec\n{2,number,#.####}\n" +
    "{3,number,#.####} sec&lt;*/*&gt;", new Object[]{new Double(trendLayer.getSlope()),
    new Double(trendLayer.getIntercept()), new Double(trendLayer.getCorrelation()),
    new Double(trendLayer.getStdError())}), "Arial Bold", 8);

// Set the background of the text box to light grey, with a black border, and 1 pixel
// 3D border
textbox.setBackground(0xc0c0c0, 0, 1);

// Output the chart
String chart1URL = c.makeSession(request, "chart1");

// include tool tip for the chart
String imageMap1 = c.getHTMLImageMap("");
%&gt;
&lt;html&gt;
&lt;body style="margin:5px 0px 0px 5px"&gt;
&lt;div style="font-size:18pt; font-family:verdana; font-weight:bold"&gt;
    Confidence Band
&lt;/div&gt;
&lt;hr color="#000080"&gt;
&lt;div style="font-size:9pt; font-family:verdana; margin-bottom:1.5em"&gt;
    &lt;a href="viewsource.jsp?file=&lt;%=request.getServletPath()%&gt;"&gt;View Source Code&lt;/a&gt;
&lt;/div&gt;
&lt;img src='&lt;%=response.encodeURL("getchart.jsp?"+chart1URL)%&gt;'
    usemap="#map1" border="0"&gt;
&lt;map name="map1"&gt;&lt;%=imageMap1%&gt;&lt;/map&gt;
&lt;/body&gt;
&lt;/html&gt;</pre></tr></td></table><br><b>[Java Version]</b> javademo/confidenceband.java
<table width="98%" border="0" cellpadding="10"><tr><td bgcolor="#cccccc"><pre>import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import ChartDirector.*;

public class confidenceband implements DemoModule
{
    //Name of demo program
    public String toString() { return "Confidence Band"; }

    //Number of charts produced in this demo
    public int getNoOfCharts() { return 1; }

    //Main code for creating charts
    public void createChart(ChartViewer viewer, int index)
    {
        // The XY data of the first data series
        double[] dataX = {50, 55, 37, 24, 42, 49, 63, 72, 83, 59};
        double[] dataY = {3.6, 2.8, 2.5, 2.3, 3.8, 3.0, 3.8, 5.0, 6.0, 3.3};

        // Create a XYChart object of size 450 x 420 pixels
        XYChart c = new XYChart(450, 420);

        // Set the plotarea at (55, 65) and of size 350 x 300 pixels, with white
        // background and a light grey border (0xc0c0c0). Turn on both horizontal and
        // vertical grid lines with light grey color (0xc0c0c0)
        c.setPlotArea(55, 65, 350, 300, 0xffffff, -1, 0xc0c0c0, 0xc0c0c0, -1);

        // Add a title to the chart using 18 point Times Bold Itatic font.
        c.addTitle("Server Performance", "Times New Roman Bold Italic", 18);

        // Add titles to the axes using 12 pts Arial Bold Italic font
        c.yAxis().setTitle("Response Time (sec)", "Arial Bold Italic", 12);
        c.xAxis().setTitle("Server Load (TPS)", "Arial Bold Italic", 12);

        // Set the axes line width to 3 pixels
        c.yAxis().setWidth(3);
        c.xAxis().setWidth(3);

        // Add a scatter layer using (dataX, dataY)
        ScatterLayer scatterLayer = c.addScatterLayer(dataX, dataY, "",
            Chart.DiamondSymbol, 11, 0x008000);

        // tool tip for scatter layer
        scatterLayer.setHTMLImageMap("", "",
            "title='Response time at {x} TPS: {value} sec'");

        // Add a trend line layer for (dataX, dataY)
        TrendLayer trendLayer = c.addTrendLayer2(dataX, dataY, 0x008000);

        // Set the line width to 3 pixels
        trendLayer.setLineWidth(3);

        // Add a 95% confidence band for the line
        trendLayer.addConfidenceBand(0.95, 0x806666ff);

        // Add a 95% confidence band (prediction band) for the points
        trendLayer.addPredictionBand(0.95, 0x8066ff66);

        // tool tip for trend layer
        trendLayer.setHTMLImageMap("", "",
            "title='Slope = {slope|4} sec/TPS; Intercept = {intercept|4} sec'");

        // Add a legend box at (50, 30) (top of the chart) with horizontal layout.
        // Use 10 pts Arial Bold Italic font. Set the background and border color to
        // Transparent.
        LegendBox legendBox = c.addLegend(50, 30, false, "Arial Bold Italic", 10);
        legendBox.setBackground(Chart.Transparent);

        // Add entries to the legend box
        legendBox.addKey("95% Line Confidence", 0x806666ff);
        legendBox.addKey("95% Point Confidence", 0x8066ff66);

        // Display the trend line parameters as a text table formatted using CDML
        TextBox textbox = c.addText(56, 65, java.text.MessageFormat.format(
            "&lt;*block*&gt;Slope\nIntercept\nCorrelation\nStd Error&lt;*/*&gt;   &lt;*block*&gt;" +
            "{0,number,#.####} sec/tps\n{1,number,#.####} sec\n{2,number,#.####}\n" +
            "{3,number,#.####} sec&lt;*/*&gt;", new Object[]{new Double(
            trendLayer.getSlope()), new Double(trendLayer.getIntercept()),
            new Double(trendLayer.getCorrelation()), new Double(
            trendLayer.getStdError())}), "Arial Bold", 8);

        // Set the background of the text box to light grey, with a black border, and
        // 1 pixel 3D border
        textbox.setBackground(0xc0c0c0, 0, 1);

        // Output the chart
        viewer.setImage(c.makeImage());

        // include tool tip for the chart
        viewer.setImageMap(c.getHTMLImageMap("clickable"));
    }

    //Allow this module to run as standalone program for easy testing
    public static void main(String[] args)
    {
        //Instantiate an instance of this demo module
        DemoModule demo = new confidenceband();

        //Create and set up the main window
        JFrame frame = new JFrame(demo.toString());
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {System.exit(0);} });
        frame.getContentPane().setBackground(Color.white);

        // Create the chart and put them in the content pane
        ChartViewer viewer = new ChartViewer();
        demo.createChart(viewer, 0);
        frame.getContentPane().add(viewer);

        // Display the window
        frame.pack();
        frame.setVisible(true);
    }
}</pre></tr></td></table>
</div>
<br><hr class="separator"><div class="copyright">&copy; 2008 Advanced Software Engineering Limited. All rights reserved.</div>
</body>
</HTML>
